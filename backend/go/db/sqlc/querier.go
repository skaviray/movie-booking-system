// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"
)

type Querier interface {
	CreateCustomer(ctx context.Context, arg CreateCustomerParams) (Customer, error)
	CreateGenre(ctx context.Context, name string) (Genre, error)
	CreateMovie(ctx context.Context, arg CreateMovieParams) (Movie, error)
	CreateRental(ctx context.Context, arg CreateRentalParams) (Rental, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteCustomer(ctx context.Context, id int64) error
	DeleteGenre(ctx context.Context, id int64) error
	DeleteMovie(ctx context.Context, id int64) error
	DeleteRental(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, id int64) error
	GetCustomer(ctx context.Context, id int64) (Customer, error)
	GetGenre(ctx context.Context, id int64) (Genre, error)
	GetMovie(ctx context.Context, id int64) (Movie, error)
	GetRental(ctx context.Context, id int64) (Rental, error)
	GetUser(ctx context.Context, id int64) (User, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	ListCustomers(ctx context.Context) ([]Customer, error)
	ListGenres(ctx context.Context) ([]Genre, error)
	ListMovies(ctx context.Context) ([]Movie, error)
	ListRentals(ctx context.Context) ([]Rental, error)
	ListUsers(ctx context.Context) ([]User, error)
	LookupRental(ctx context.Context, arg LookupRentalParams) (Rental, error)
	// LIMIT $1 OFFSET $2;
	UpdateCustomer(ctx context.Context, arg UpdateCustomerParams) (Customer, error)
	// LIMIT $1 OFFSET $2;
	UpdateGenre(ctx context.Context, arg UpdateGenreParams) (Genre, error)
	// LIMIT $1 OFFSET $2;
	UpdateMovie(ctx context.Context, arg UpdateMovieParams) (Movie, error)
	// LIMIT $1 OFFSET $2;
	UpdateRentalReturn(ctx context.Context, arg UpdateRentalReturnParams) (Rental, error)
	// LIMIT $1 OFFSET $2;
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) (User, error)
}

var _ Querier = (*Queries)(nil)
